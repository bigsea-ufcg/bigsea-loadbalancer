[monitoring]
username=<@username>
password=<@password>
project_name=<@project_name>
auth_url=<@auth_url>
monasca_api_version=2_0

[heuristic]
# A float value that represents the ratio of number of cores in the hosts. (desirable overcommit factor)
cpu_ratio=0.5
# An integer that represent the number of rounds that a instance need to wait before be migrated again
# Each round represents an execution of the loadbalancer
wait_rounds= 1
# The filename for the module that is located in /loadbalancer/service/heuristic/
# without .py extension
module=<module_name>
# The class name that is inside the given module, this class should implement BasicHeuristic
class=<class_name>
#Number of seconds before execute the heuristic again
period=<value>

[infrastructure]
# The user that have access to each host
user=<username>
#List of full hostnames of servers that the loadbalancer will manage (separated by comma).
#e.g compute1.mylab.edu.br
hosts=<host>,<host2>
#The key used to access the hosts
key=<key_path>
#The type of IaaS provider on your infrastructure e.g OpenStack, OpenNebula
provider=OpenStack

[openstack]
username=<@username>
password=<@password>
user_domain_name=<@user_domain_name>
project_name=<@project_name>
project_domain_name=<@project_domain_name>
auth_url=<@auth_url>

[optimizer]
# The filename for the module that is located in /loadbalancer/service/heuristic/
# without .py extension
module=<optimizer_module_name>
# The class name that is inside the given module, this class should implement BaseOptimizer
class=<optimizer_class_name>
# The url to make the request to the optimizer service
request_url=<http://url/...>
# The type of the request: GET, POST, etc...
request_type=<type>
# Parameters to be used with the request url
request_params=<params>
